//Estou focando apenas nos primeiros exercicios de cada t√≥pico, para continuar meus estudos.
//vou resolvendo mais exercicios todos os dias

/*
//TOTAL =

//Exerc√≠cios de Fun√ß√µes Recursivas
//1. soma de n√∫meros
function somaAll(n) {
    if (n === 1) return 1
    return n + somaAll(n - 1)
    
}

console.log(somaAll(5))
/*
// forma clara de entender:
üìå O que a fun√ß√£o faz?
A fun√ß√£o somaAll(n) recebe um n√∫mero n e soma todos os n√∫meros de 1 at√© n usando recurs√£o.

Se n for 1, ela para e retorna 1.
Caso contr√°rio, ela chama a si mesma com n - 1 e soma com n.

üìå Chamadas e retornos passo a passo
Se chamarmos somaAll(5), a fun√ß√£o executa assim:

1Ô∏è‚É£ Primeira chamada: somaAll(5)

Como n n√£o √© 1, faz:
5 + somaAll(4)
2Ô∏è‚É£ Segunda chamada: somaAll(4)

Como n n√£o √© 1, faz:
4 + somaAll(3)
3Ô∏è‚É£ Terceira chamada: somaAll(3)

Como n n√£o √© 1, faz:
3 + somaAll(2)
4Ô∏è‚É£ Quarta chamada: somaAll(2)

Como n n√£o √© 1, faz:
2 + somaAll(1)
5Ô∏è‚É£ Quinta chamada: somaAll(1)

Aqui a fun√ß√£o para (caso base) e retorna 1.
*/
/*
//2.fatorial de um n√∫mero
function fatorial(n){
    if (n === 1) return 1
    return n * fatorial(n - 1)
}

console.log(fatorial(5))
*/
//FALTA EX: DO 3. ao 15